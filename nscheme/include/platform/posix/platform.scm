(define platform.posix.default
  (list (cons 'posix
              (list (cons 'argument*           '())
                    (cons 'environment         '())
                    (cons 'raw-process/k       (lambda (in out err path arg* env kf k)
                                                 (kf 'unsupported (list (vector '(unsupported posix-raw-process/k) path arg*)))))
                    (cons 'filesystem          (lambda (method . arg*)
                                                 (lambda (kf k)
                                                   (kf 'unsupported (list (vector '(unsupported posix-filesystem) method arg*))))))
                    (cons 'network             (lambda (method . arg*)
                                                 (lambda (kf k)
                                                   (kf 'unsupported (list (vector '(unsupported posix-network) method arg*))))))
                    (cons 'set-signal-handler! (lambda (signal handler) (values)))
                    (cons 'exit                (lambda (exit-code) (values)))))))
(define current-posix-argument*           (make-platform-parameter '(posix argument*)           platform.posix.default))
(define current-posix-environment         (make-platform-parameter '(posix environment)         platform.posix.default))
(define current-posix-raw-process/k       (make-platform-parameter '(posix raw-process/k)       platform.posix.default))
(define current-posix-filesystem          (make-platform-parameter '(posix filesystem)          platform.posix.default))
(define current-posix-network             (make-platform-parameter '(posix network)             platform.posix.default))
(define current-posix-set-signal-handler! (make-platform-parameter '(posix set-signal-handler!) platform.posix.default))
(define current-posix-exit                (make-platform-parameter '(posix exit)                platform.posix.default))
