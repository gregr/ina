(define (unicode->utf8 i)
  (define (lead tag shift)
    (bitwise-ior tag (bitwise-arithmetic-shift i shift)))
  (define (follow shift)
    (bitwise-ior #b10000000 (bitwise-and
                              #b111111 (bitwise-arithmetic-shift i shift))))
  ;; Conventionally invalid ranges: U+D800 through U+DFFF and above U+10FFFF
  ;; This encoding could handle up to 7 units (42 bits), i.e., U+3FFFFFFFFFF
  (and (<= 0 i #x10ffff) (cond ((<= i #x7F)   (list i))
                               ((<= i #x07FF) (list (lead #b11000000 -6)
                                                    (follow           0)))
                               ((<= i #xFFFF) (list (lead #b11100000 -12)
                                                    (follow          -6)
                                                    (follow           0)))
                               (else          (list (lead #b11110000 -18)
                                                    (follow          -12)
                                                    (follow          -6)
                                                    (follow           0))))))

(define (utf8->unicode i0)
  (define (lead i mask shift)
    (bitwise-arithmetic-shift (bitwise-and mask i) shift))
  (define (follow c i shift)
    (and (< #b01111111 i #b11000000)
         (bitwise-ior c (bitwise-arithmetic-shift
                          (bitwise-and #b00111111 i) shift))))
  (cond ((<= i0 #x7F) i0)
        ((<= #xF0 i0) (define c0 (lead i0 #b00000111 18))
                      (lambda (i1)
                        (define c1 (follow c0 i1 12))
                        (and c1 (<= #x10000 c1)
                             (lambda (i2)
                               (define c2 (follow c1 i2 6))
                               (and c2 (lambda (i3) (follow c2 i3 0)))))))
        ((<= #xE0 i0) (define c0 (lead i0 #b00001111 12))
                      (lambda (i1)
                        (define c1 (follow c0 i1 6))
                        (and c1 (<= #x800 c1) (lambda (i2) (follow c1 i2 0)))))
        ((<= #xC2 i0) (define c0 (lead i0 #b00011111 6))
                      (lambda (i1) (follow c0 i1 0)))
        (else         #f)))
